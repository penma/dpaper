#!/usr/bin/env perl
use strict;
use warnings;

use Getopt::Long qw(:config no_ignore_case bundling);
use Algorithm::FEC;
use IPC::Run qw(run);
use DPaper::Encoder;

my $c_fileid = "stdin";
GetOptions("fileid|I=s" => \$c_fileid) or die;

my $encoder = DPaper::Encoder->new(fileid => $c_fileid);

while (read(STDIN, my $c_data, 30*128)) {
	my $fec = Algorithm::FEC->new(128, 160, 30);
	my @l = unpack("(a30)*", $c_data);
	$l[-1] = pack("a30", $l[-1]); # pad last block
	push(@l, "\0" x 30) until (@l == 128);
	$fec->set_encode_blocks(\@l);
	my $d = join("", map { $fec->encode($_) } 0..159);
	$encoder->writepage(data => $d, length => length($c_data));
}

open(my $out, ">", "output.ps");
print $out $encoder->get();
